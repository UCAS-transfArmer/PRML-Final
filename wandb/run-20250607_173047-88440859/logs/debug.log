2025-06-07 17:30:47,672 INFO    MainThread:2802792 [wandb_setup.py:_flush():81] Current SDK version is 0.20.1
2025-06-07 17:30:47,672 INFO    MainThread:2802792 [wandb_setup.py:_flush():81] Configure stats pid to 2802792
2025-06-07 17:30:47,672 INFO    MainThread:2802792 [wandb_setup.py:_flush():81] Loading settings from /home/inspur/.config/wandb/settings
2025-06-07 17:30:47,672 INFO    MainThread:2802792 [wandb_setup.py:_flush():81] Loading settings from /home/inspur/cth/PRML-Final/wandb/settings
2025-06-07 17:30:47,672 INFO    MainThread:2802792 [wandb_setup.py:_flush():81] Loading settings from environment variables
2025-06-07 17:30:47,672 INFO    MainThread:2802792 [wandb_init.py:setup_run_log_directory():703] Logging user logs to /home/inspur/cth/PRML-Final/wandb/run-20250607_173047-88440859/logs/debug.log
2025-06-07 17:30:47,673 INFO    MainThread:2802792 [wandb_init.py:setup_run_log_directory():704] Logging internal logs to /home/inspur/cth/PRML-Final/wandb/run-20250607_173047-88440859/logs/debug-internal.log
2025-06-07 17:30:47,673 INFO    MainThread:2802792 [wandb_init.py:init():831] calling init triggers
2025-06-07 17:30:47,673 INFO    MainThread:2802792 [wandb_init.py:init():836] wandb.init called with sweep_config: {}
config: {'_initialized': True, '_explicit_bool': False, '_underscores_to_dashes': False, '_parsed': True, 'extra_args': [], 'argument_buffer': {'help': (('-h', '--help'), {'action': 'help', 'default': '==SUPPRESS==', 'help': 'show this help message and exit'})}, '_subparser_buffer': [], 'class_variables': {'project_name': {'comment': ''}, 'exp_name': {'comment': 'Name of the experiment, used for logging and saving checkpoints.'}, 'dataset': {'comment': 'Dataset to use. Currently only cifar10 is supported.'}, 'model': {'comment': 'Model architecture (choices: logistic, boosting, resnet, vit)'}, 'ep': {'comment': 'Number of epochs'}, 'tblr': {'comment': 'Initial learning rate for bs = 1024'}, 'max_lr': {'comment': 'Used in the ResNet training phase for One Cycle Learning Rate Policy scheduler'}, 'weight_decay': {'comment': 'Used for ResNet lr scheduling'}, 'bs': {'comment': 'Batch size'}, 'bs_base': {'comment': 'Base batch size for scaling learning rate'}, 'log_per_iter': {'comment': 'Log training progress every N iterations'}, 'save_per_iter': {'comment': 'Save model checkpoint every N iterations (0 to disable)'}, 'save_path': {'comment': 'Path to save checkpoints'}, 'num_workers': {'comment': 'Number of dataloader workers'}, 'device': {'comment': 'Device to train on'}, 'num_estimators': {'comment': 'Number of weak learners in boosting'}, 'boosting_ep': {'comment': 'Number of epochs for each weak learner in boosting'}, 'weak_learner_type': {'comment': 'Type of weak learner in boosting (choices: cnn, nn, linear)'}}, '_annotations': {'project_name': <class 'str'>, 'exp_name': <class 'str'>, 'dataset': <class 'str'>, 'model': <class 'str'>, 'ep': <class 'int'>, 'tblr': <class 'float'>, 'max_lr': <class 'float'>, 'weight_decay': <class 'float'>, 'bs': <class 'int'>, 'bs_base': <class 'int'>, 'log_per_iter': <class 'int'>, 'save_per_iter': <class 'int'>, 'save_path': <class 'str'>, 'num_workers': <class 'int'>, 'device': <class 'str'>, 'num_estimators': <class 'int'>, 'boosting_ep': <class 'int'>, 'weak_learner_type': <class 'str'>}, 'description': None, 'argument_default': None, 'prefix_chars': '-', 'conflict_handler': 'error', '_registries': {'action': {None: <class 'argparse._StoreAction'>, 'store': <class 'argparse._StoreAction'>, 'store_const': <class 'argparse._StoreConstAction'>, 'store_true': <class 'argparse._StoreTrueAction'>, 'store_false': <class 'argparse._StoreFalseAction'>, 'append': <class 'argparse._AppendAction'>, 'append_const': <class 'argparse._AppendConstAction'>, 'count': <class 'argparse._CountAction'>, 'help': <class 'argparse._HelpAction'>, 'version': <class 'argparse._VersionAction'>, 'parsers': <class 'argparse._SubParsersAction'>, 'extend': <class 'argparse._ExtendAction'>}, 'type': {None: <function ArgumentParser.__init__.<locals>.identity at 0x7769fc22b880>}}, '_actions': [_StoreAction(option_strings=['--project_name'], dest='project_name', nargs=None, const=None, default='prml-final', type=<class 'str'>, choices=None, required=False, help='(str, default=prml-final) ', metavar=None), _StoreAction(option_strings=['--exp_name'], dest='exp_name', nargs=None, const=None, default='default_experiment', type=<class 'str'>, choices=None, required=False, help='(str, default=default_experiment) Name of the experiment, used for logging and saving checkpoints.', metavar=None), _StoreAction(option_strings=['--dataset'], dest='dataset', nargs=None, const=None, default='cifar10', type=<class 'str'>, choices=None, required=False, help='(str, default=cifar10) Dataset to use. Currently only cifar10 is supported.', metavar=None), _StoreAction(option_strings=['--model'], dest='model', nargs=None, const=None, default='resnet', type=<class 'str'>, choices=None, required=False, help='(str, default=resnet) Model architecture (choices: logistic, boosting, resnet, vit)', metavar=None), _StoreAction(option_strings=['--ep'], dest='ep', nargs=None, const=None, default=400, type=<class 'int'>, choices=None, required=False, help='(int, default=400) Number of epochs', metavar=None), _StoreAction(option_strings=['--tblr'], dest='tblr', nargs=None, const=None, default=0.0001, type=<class 'float'>, choices=None, required=False, help='(float, default=0.0001) Initial learning rate for bs = 1024', metavar=None), _StoreAction(option_strings=['--max_lr'], dest='max_lr', nargs=None, const=None, default=0.01, type=<class 'float'>, choices=None, required=False, help='(float, default=0.01) Used in the ResNet training phase for One Cycle Learning Rate Policy scheduler', metavar=None), _StoreAction(option_strings=['--weight_decay'], dest='weight_decay', nargs=None, const=None, default=0.0001, type=<class 'float'>, choices=None, required=False, help='(float, default=0.0001) Used for ResNet lr scheduling', metavar=None), _StoreAction(option_strings=['--bs'], dest='bs', nargs=None, const=None, default=1024, type=<class 'int'>, choices=None, required=False, help='(int, default=1024) Batch size', metavar=None), _StoreAction(option_strings=['--bs_base'], dest='bs_base', nargs=None, const=None, default=1024, type=<class 'int'>, choices=None, required=False, help='(int, default=1024) Base batch size for scaling learning rate', metavar=None), _StoreAction(option_strings=['--log_per_iter'], dest='log_per_iter', nargs=None, const=None, default=10, type=<class 'int'>, choices=None, required=False, help='(int, default=10) Log training progress every N iterations', metavar=None), _StoreAction(option_strings=['--save_per_iter'], dest='save_per_iter', nargs=None, const=None, default=1000, type=<class 'int'>, choices=None, required=False, help='(int, default=1000) Save model checkpoint every N iterations (0 to disable)', metavar=None), _StoreAction(option_strings=['--save_path'], dest='save_path', nargs=None, const=None, default='ckpts', type=<class 'str'>, choices=None, required=False, help='(str, default=ckpts) Path to save checkpoints', metavar=None), _StoreAction(option_strings=['--num_workers'], dest='num_workers', nargs=None, const=None, default=2, type=<class 'int'>, choices=None, required=False, help='(int, default=2) Number of dataloader workers', metavar=None), _StoreAction(option_strings=['--device'], dest='device', nargs=None, const=None, default='cuda', type=<class 'str'>, choices=None, required=False, help='(str, default=cuda) Device to train on', metavar=None), _StoreAction(option_strings=['--num_estimators'], dest='num_estimators', nargs=None, const=None, default=20, type=<class 'int'>, choices=None, required=False, help='(int, default=20) Number of weak learners in boosting', metavar=None), _StoreAction(option_strings=['--boosting_ep'], dest='boosting_ep', nargs=None, const=None, default=50, type=<class 'int'>, choices=None, required=False, help='(int, default=50) Number of epochs for each weak learner in boosting', metavar=None), _StoreAction(option_strings=['--weak_learner_type'], dest='weak_learner_type', nargs=None, const=None, default='nn', type=<class 'str'>, choices=None, required=False, help='(str, default=nn) Type of weak learner in boosting (choices: cnn, nn, linear)', metavar=None), _HelpAction(option_strings=['-h', '--help'], dest='help', nargs=0, const=None, default='==SUPPRESS==', type=None, choices=None, required=False, help='show this help message and exit', metavar=None)], '_option_string_actions': {'--project_name': _StoreAction(option_strings=['--project_name'], dest='project_name', nargs=None, const=None, default='prml-final', type=<class 'str'>, choices=None, required=False, help='(str, default=prml-final) ', metavar=None), '--exp_name': _StoreAction(option_strings=['--exp_name'], dest='exp_name', nargs=None, const=None, default='default_experiment', type=<class 'str'>, choices=None, required=False, help='(str, default=default_experiment) Name of the experiment, used for logging and saving checkpoints.', metavar=None), '--dataset': _StoreAction(option_strings=['--dataset'], dest='dataset', nargs=None, const=None, default='cifar10', type=<class 'str'>, choices=None, required=False, help='(str, default=cifar10) Dataset to use. Currently only cifar10 is supported.', metavar=None), '--model': _StoreAction(option_strings=['--model'], dest='model', nargs=None, const=None, default='resnet', type=<class 'str'>, choices=None, required=False, help='(str, default=resnet) Model architecture (choices: logistic, boosting, resnet, vit)', metavar=None), '--ep': _StoreAction(option_strings=['--ep'], dest='ep', nargs=None, const=None, default=400, type=<class 'int'>, choices=None, required=False, help='(int, default=400) Number of epochs', metavar=None), '--tblr': _StoreAction(option_strings=['--tblr'], dest='tblr', nargs=None, const=None, default=0.0001, type=<class 'float'>, choices=None, required=False, help='(float, default=0.0001) Initial learning rate for bs = 1024', metavar=None), '--max_lr': _StoreAction(option_strings=['--max_lr'], dest='max_lr', nargs=None, const=None, default=0.01, type=<class 'float'>, choices=None, required=False, help='(float, default=0.01) Used in the ResNet training phase for One Cycle Learning Rate Policy scheduler', metavar=None), '--weight_decay': _StoreAction(option_strings=['--weight_decay'], dest='weight_decay', nargs=None, const=None, default=0.0001, type=<class 'float'>, choices=None, required=False, help='(float, default=0.0001) Used for ResNet lr scheduling', metavar=None), '--bs': _StoreAction(option_strings=['--bs'], dest='bs', nargs=None, const=None, default=1024, type=<class 'int'>, choices=None, required=False, help='(int, default=1024) Batch size', metavar=None), '--bs_base': _StoreAction(option_strings=['--bs_base'], dest='bs_base', nargs=None, const=None, default=1024, type=<class 'int'>, choices=None, required=False, help='(int, default=1024) Base batch size for scaling learning rate', metavar=None), '--log_per_iter': _StoreAction(option_strings=['--log_per_iter'], dest='log_per_iter', nargs=None, const=None, default=10, type=<class 'int'>, choices=None, required=False, help='(int, default=10) Log training progress every N iterations', metavar=None), '--save_per_iter': _StoreAction(option_strings=['--save_per_iter'], dest='save_per_iter', nargs=None, const=None, default=1000, type=<class 'int'>, choices=None, required=False, help='(int, default=1000) Save model checkpoint every N iterations (0 to disable)', metavar=None), '--save_path': _StoreAction(option_strings=['--save_path'], dest='save_path', nargs=None, const=None, default='ckpts', type=<class 'str'>, choices=None, required=False, help='(str, default=ckpts) Path to save checkpoints', metavar=None), '--num_workers': _StoreAction(option_strings=['--num_workers'], dest='num_workers', nargs=None, const=None, default=2, type=<class 'int'>, choices=None, required=False, help='(int, default=2) Number of dataloader workers', metavar=None), '--device': _StoreAction(option_strings=['--device'], dest='device', nargs=None, const=None, default='cuda', type=<class 'str'>, choices=None, required=False, help='(str, default=cuda) Device to train on', metavar=None), '--num_estimators': _StoreAction(option_strings=['--num_estimators'], dest='num_estimators', nargs=None, const=None, default=20, type=<class 'int'>, choices=None, required=False, help='(int, default=20) Number of weak learners in boosting', metavar=None), '--boosting_ep': _StoreAction(option_strings=['--boosting_ep'], dest='boosting_ep', nargs=None, const=None, default=50, type=<class 'int'>, choices=None, required=False, help='(int, default=50) Number of epochs for each weak learner in boosting', metavar=None), '--weak_learner_type': _StoreAction(option_strings=['--weak_learner_type'], dest='weak_learner_type', nargs=None, const=None, default='nn', type=<class 'str'>, choices=None, required=False, help='(str, default=nn) Type of weak learner in boosting (choices: cnn, nn, linear)', metavar=None), '-h': _HelpAction(option_strings=['-h', '--help'], dest='help', nargs=0, const=None, default='==SUPPRESS==', type=None, choices=None, required=False, help='show this help message and exit', metavar=None), '--help': _HelpAction(option_strings=['-h', '--help'], dest='help', nargs=0, const=None, default='==SUPPRESS==', type=None, choices=None, required=False, help='show this help message and exit', metavar=None)}, '_action_groups': [<argparse._ArgumentGroup object at 0x776d8b75c2c0>, <argparse._ArgumentGroup object at 0x7769fb1ef440>], '_mutually_exclusive_groups': [], '_defaults': {}, '_negative_number_matcher': re.compile('^-\\d+$|^-\\d*\\.\\d+$'), '_has_negative_number_optionals': [], 'prog': 'train.py', 'usage': None, 'epilog': None, 'formatter_class': <class 'argparse.HelpFormatter'>, 'fromfile_prefix_chars': None, 'add_help': True, 'allow_abbrev': True, 'exit_on_error': True, '_positionals': <argparse._ArgumentGroup object at 0x776d8b75c2c0>, '_optionals': <argparse._ArgumentGroup object at 0x7769fb1ef440>, '_subparsers': None, 'args_from_configs': [], 'project_name': 'prml-final', 'exp_name': 'resnet-ep100-scheduler', 'dataset': 'cifar10', 'model': 'resnet', 'ep': 100, 'tblr': 0.0001, 'max_lr': 0.01, 'weight_decay': 0.0001, 'bs': 1024, 'bs_base': 1024, 'log_per_iter': 10, 'save_per_iter': 1000, 'save_path': './saves', 'num_workers': 2, 'device': 'cuda', 'num_estimators': 20, 'boosting_ep': 50, 'weak_learner_type': 'nn', '_wandb': {}}
2025-06-07 17:30:47,673 INFO    MainThread:2802792 [wandb_init.py:init():872] starting backend
2025-06-07 17:30:47,881 INFO    MainThread:2802792 [wandb_init.py:init():875] sending inform_init request
2025-06-07 17:30:47,887 INFO    MainThread:2802792 [wandb_init.py:init():883] backend started and connected
2025-06-07 17:30:47,889 INFO    MainThread:2802792 [wandb_init.py:init():956] updated telemetry
2025-06-07 17:30:47,892 INFO    MainThread:2802792 [wandb_init.py:init():980] communicating run to backend with 90.0 second timeout
2025-06-07 17:30:49,426 INFO    MainThread:2802792 [wandb_init.py:init():1027] run resumed
2025-06-07 17:30:49,429 INFO    MainThread:2802792 [wandb_init.py:init():1032] starting run threads in backend
2025-06-07 17:30:49,502 INFO    MainThread:2802792 [wandb_run.py:_console_start():2453] atexit reg
2025-06-07 17:30:49,502 INFO    MainThread:2802792 [wandb_run.py:_redirect():2301] redirect: wrap_raw
2025-06-07 17:30:49,502 INFO    MainThread:2802792 [wandb_run.py:_redirect():2370] Wrapping output streams.
2025-06-07 17:30:49,502 INFO    MainThread:2802792 [wandb_run.py:_redirect():2393] Redirects installed.
2025-06-07 17:30:49,504 INFO    MainThread:2802792 [wandb_init.py:init():1078] run started, returning control to user process
2025-06-07 17:31:09,503 INFO    MsgRouterThr:2802792 [mailbox.py:close():129] [no run ID] Closing mailbox, abandoning 1 handles.
